#!/usr/bin/python
#coding:utf-8

'''------------------将整数转为多项式表示---------------'''
def gf2mod(sInt):
    return [(sInt >> i) & 1
            for i in reversed(range(sInt.bit_length()))]    
'''-----------------------------------------------------'''
'''-----------------全局参数--------------------------'''
m = 13
mask1= 2 ** m
mask2=mask1-1
polyred=0b0000000011011
t = 8
bch_n = 4200
bch_k = 4096
bch_c = bch_n - bch_k

g=[0,0,0,1,0,1,0,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,1,0,0,0,0,0,1,1,1,0,0,0,1,0,1,1,1,0,0,0,1,0,0,1,1,1,1,1,0,1,1,0,0,1,0,0,0,1,1]

'''-------------------gf列表---------------------------'''
from gftable import gftable
table = {}
rev_table = {}
for (i, j) in enumerate(gftable):
    table[i + 1] = j
    rev_table[j] = i + 1
'''---------------------------------------------------'''

'''--------------------有限域的加法---------------------'''
"""Add two polynomials in GF(2^m)/g(x)"""
def gf2add(p1,p2):
    return p1 ^ p2
'''-----------------------------------------------------'''
'''--------------------有限域的乘法----------------------'''
"""Multiply two polynomials in GF(2^m)/g(x)"""
def gf2mul(p1,p2):
    p = 0
    while p2:
        if p2 & 1:
            p ^= p1
        p1 <<= 1
        if p1 & mask1:
            p1 ^= polyred
        p2 >>= 1
    return p & mask2
'''----------------------------------------------------'''

'''----------------------------将0-1列表转成整数------------------------------'''
def list2int(l):
    sum = 0
    length = len(l)
    for i in range(length):
        sum = sum + l[length-1-i] * (2 **i)
    return sum

